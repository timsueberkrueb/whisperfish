[package]
name = "harbour-whisperfish"
version = "0.6.0-dev"
authors = ["Ruben De Smet <ruben.de.smet@rubdos.be>"]
edition = "2018"
build = "build.rs"
license = "AGPL-3.0-or-later"
description = "Private messaging using Signal for SailfishOS."

[[bench]]
name = "storage"
harness = false

[dependencies]
async-trait = "0.1"
bincode = "1.2.1"
actix = "0.11.0-beta"
rand = "0.7"
aes = "0.7"
block-modes = "0.8"
parking_lot = "0.11"
dbus = "0.9"
hmac = "0.11.0"
sha2 = "0.9.0"
pbkdf2 = { version = "0.8.0", default-features = false }
sha-1 = "0.9.0"
uuid = { version = "0.8.1", features=["v4"] }
mime_guess = "2.0.3"
actix-threadpool = "0.3"
actix-rt = "2.0.0-beta"
actix_derive = "0.6.0-beta.1"
chrono = "0.4"
tokio = {version="1.1", features=["time", "io-util", "net", "sync"]}
futures = "0.3"
pin-utils = "0.1"
qmetaobject = { version = "0.2.3" }
qttypes = { version = "0.2.3", features = ["qtwebengine", "qtquick", "qtquickcontrols2"] }
#qmetaobject = { version = "0.1.4", git = "https://gitlab.com/rubdos/qmetaobject-sfos-rs", branch = "sailfishos" }
cstr = "0.2.0"
cpp = "0.5"
dirs = "3.0"
anyhow = "1.0"
thiserror = "1"
libsignal-service = { git = "https://github.com/Michael-F-Bryan/libsignal-service-rs", branch = "master" }
libsignal-service-actix = { git = "https://github.com/Michael-F-Bryan/libsignal-service-rs", branch = "master" }
zkgroup = { git = "https://github.com/signalapp/zkgroup" }
log = "0.4.8"
env_logger = "0.8"
scrypt = { version = "0.7", default-features = false, features=["std"] }
single-instance = "0.3.1"
hex="0.4"
phonenumber = "0.3"
itertools = "0.10.0"

diesel = { version = "1.4", features = ["sqlite", "chrono"] }
diesel_migrations = "1.4"
libsqlite3-sys = { version = "0.9", features = ["sqlcipher"] }

serde = {version = "1.0", features = ["derive"]}
serde_yaml = "0.8"

prost = "0.8"

tempdir = "0.3.5"

structopt = "0.3.16"

rpassword = "5.0"

[build-dependencies]
cpp_build = "0.5"
cc = "1.0"
failure = "0.1.6"
dotenv = "0.15"
regex = "1.3.9"
prost-build = "0.8"
vergen = "5"
version_check = "0.9"

[dev-dependencies]
# Git version for async tests. 0.6.5 will contain this feature,
# so revert to crates.io on release
criterion = "0.3"
rstest = { version = "0.10" }
rstest_reuse = { version = "0.1.0" }

# Smart dev mode: Compile most stuff in release mode, except for the things
# that are actually maintained by our community
[profile.dev.package."*"]
opt-level = 3

[profile.dev.package.libsignal-protocol]
opt-level = 0

[profile.dev.package.libsignal-service]
opt-level = 0

[profile.dev.package.libsignal-service-actix]
opt-level = 0

[profile.dev.package.qmetaobject]
opt-level = 0

[profile.release]
# This flag is set in CI using RUSTFLAGS
# lto = "fat"

[package.metadata.rpm]
# DOES NOT get overwritten through `cargo rpm build --target xxx`,
# means we can *lie* to RPM for issue #24.
target_architecture = "armv7hl"
#target_architecture = "aarch64"
#target_architecture = "i486"

[package.metadata.rpm.cargo]
buildflags = ["--release"]
# Gets overwritten through `cargo rpm build --target xxx`
target = "armv7-unknown-linux-gnueabihf"
#target = "aarch64-unknown-linux-gnu"
#target = "i686-unknown-linux-gnu"

[package.metadata.rpm.targets]
harbour-whisperfish = { path = "/usr/bin/harbour-whisperfish" }
whisperfish-migration-dry-run = { path = "/usr/bin/whisperfish-migration-dry-run" }

[package.metadata.rpm.files]
"../harbour-whisperfish.desktop" = { path = "/usr/share/applications/harbour-whisperfish.desktop" }
"../harbour-whisperfish.privileges" = { path = "/usr/share/mapplauncherd/privileges.d/harbour-whisperfish.privileges" }
"../harbour-whisperfish-message.conf" = { path = "/usr/share/lipstick/notificationcategories/harbour-whisperfish-message.conf" }
"../icons/86x86/harbour-whisperfish.png" = { path = "/usr/share/icons/hicolor/86x86/apps/harbour-whisperfish.png" }
"tmp_feature_files/systemd/" = { path = "/usr/lib/systemd/user/" }
"tmp_feature_files/transferplugin/" = { path = "/usr/lib/nemo-transferengine/plugins/" }
"tmp_feature_files/transferui/" = { path = "/usr/share/nemo-transferengine/plugins/" }
"tmp_feature_files/dbus/" = { path = "/usr/share/dbus-1/services/" }


"../qml/" = { path = "/usr/share/harbour-whisperfish/qml/" }
"../icons/" = { path = "/usr/share/harbour-whisperfish/icons/" }
"../translations/" = { path = "/usr/share/harbour-whisperfish/translations" }

[features]
sailfish = []
harbour = []

[patch."https://github.com/signalapp/zkgroup"]
zkgroup = { git = "https://gitlab.com/whisperfish/zkgroup", branch = "whisperfork" }
[patch."https://github.com/signalapp/libsignal-client"]
libsignal-protocol = { git = "https://gitlab.com/whisperfish/libsignal-client", branch = "whisperfork" }

# [patch."https://github.com/Michael-F-Bryan/libsignal-service-rs"]
# libsignal-service = { path = "/home/rsmet/src/libsignal-service-rs/libsignal-service" }
# libsignal-service-actix = { path = "/home/rsmet/src/libsignal-service-rs/libsignal-service-actix/" }
